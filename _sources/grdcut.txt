.. index:: ! grdcut

grdcut
======

:官方文档: :ref:`grdcut`
:简介: 从一个网格文件中裁剪出一个子区域

可以通过指定 ``-R`` 直接指定自区域的范围，也可以通过检查网格节点的值或者离指定点的距离来限定子区域。

选项
----

``<ingrid>``
    输入网格文件

``-G<outgrid>``
    输出网格文件名

``-N[<nodata>]``
    允许新网格的范围超过原网格范围。

    一般情况下，若指定的区域范围大于输入网格的区域范围，超出的部分会被自动忽略，实际的输出网格的区域范围会自动适应输入网格的区域范围。使用 ``-N`` 选项，则超出的区域范围内，网格节点会被赋以指定的值，默认赋值为NaN，也可以自己指定其值 ``<nodata>`` 。

``-R``
    指定要截取的网格区域::

        gmt grdcut input.nc -Goutput.nc -R0/30/-30/30

``-S[n]<lon>/<lat>/<radius>[<unit>]``
    指定一个圆形区域，程序会自动计算出一个包含了圆上及圆内所有节点的矩形区域。

    #. ``<lon>`` ``<lat>`` 圆心位置
    #. ``<radius>`` 圆半径
    #. ``<unit>`` 半径单位
    #. ``-Sn`` 设置矩形区域内位于圆外的节点的值为NaN

    下面的例子生成的网格文件包含了距离 ``(45,30)`` 500 km以内的所有点::

        gmt grdcut input.nc -Goutput.nc -S15/0/500k -V

``-Z[n|r]<min>/<max>``
    定义一个Z值范围 ``[min,max]`` ，由此确定一个新的子区域，保证在该子区域\ **外**\ 的所有节点都位于给定的Z值范围外。注意：矩形区域内的网格点的值并不一定都在Z值范围之内。

    ``<min>`` 和 ``<max>`` 默认值为正负无穷，实际使用时可以用 ``-`` 代替。

    为了得到满足要求的矩形区域，代码中从四条边界开始向内收缩，当某条边界遇到某个网格点的值在给定的Z值范围内，则此边界停止收缩。

    正常情况下，值为NaN的记录会被直接跳过：

    - ``-Zn`` 认为NaN记录位于Z值范围之外，故而保证子区域内是没有NaN记录的
    - ``-Zr`` 认为NaN记录位于Z值范围之内，因而当遇到NaN记录时，则停止收缩边界

    ::

        gmt grdcut abc.nc -Gdef.nc -Z-/0 -V
